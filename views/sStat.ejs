<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="/stylesheets/bootstrap.min.css">
    <script src="/javascript/jquery-3.5.1.min.js"></script>
    <script src="/javascript/popper.min.js"></script>
    <script src="/javascript//bootstrap.min.js"></script>
    <link rel="stylesheet" href="/stylesheets/style.css">
    <link rel="stylesheet" href="/stylesheets/fontello.css">
    <link rel="stylesheet" href="/stylesheets/sider.css">
    <link rel="stylesheet" href="/stylesheets/sStat.css">
    <script src="/javascript/vue.js"></script>


    <title>Document</title>



</head>

<body>

    <!-- 左邊sider -->
    <%- include('sSider', {active}); %>

    <div class="containerRight" id='stat'>
        <!-- 右邊內容放置區 -->

        <nav class="topTag row inWrapper position-sticky">
            <div class="dTag text24RG act">日營業額</div>
            <div class="dTag text24RG">月營業額</div>
        </nav>
        <ul class="statList">
            <!-- <li>
                <h2 class="text20RG">日期</h2>
                <p class="eng24R">{{'date'}}</p>
            </li>
            <li>
                <h2 class="text20RG">訂單量</h2>
                <p class="eng24R">{{'(orderTotle).toLocaleString('en-US')'}}</p>
            </li>
            <li>
                <h2 class="text20RG">銷售總額</h2>
                <p class="eng24R">${{'(orderAmount).toLocaleString('en-US')'}}</p>
            </li> -->
        </ul>
        <div class="d-flex align-items-center">
            <img class="lrImg" src="/image/left.png">
            <div class="dblock mt-4 col-10">
                <canvas id="chart" width="800" height="400"></canvas>
            </div>
            <img class="lrImg" src="/image/right.png">
        </div>

        <div class="typeButton">
            <button class="text20R dbtn btnGB">全部</button>
            <button class=" text20R dbtn btnGB" v-for='(item,index) in category'
                @click='(switchbutton(index))'>{{'item.categoryName'}}</button>
        </div>
        <!-- <div class="typeCheckbox" id='typeCheckbox'>
            <span>
            <span> <input type="checkbox" id="all">
                <label for="all" class="text20R">全選</label></span>
            <span v-for='item in category'>
                <input type="checkbox" id="all">
                <label for="all" class="text20R">{{item.productName}}</label>
            </span>
            </span>
        </div>
 -->

    </div>
    <!-- vue -->
    <script>
        // data資料

        // let data = {
        //     category: [{
        //             categoryID: '0',
        //             categoryName: '套餐',
        //             productName: 'A套餐',
        //             productName: 'B套餐',
        //             productName: 'C套餐',
        //         }, {
        //             categoryID: '1',
        //             categoryName: '漢堡',
        //             productName: '摩絲熱狗堡',
        //             productName: '摩絲熱狗堡1',
        //             productName: '摩絲熱狗堡3',
        //         }, {
        //             categoryID: '2',
        //             categoryName: '飲品',
        //             productName: '可樂',
        //             productName: '雪碧',
        //             productName: '玉米濃湯',
        //         }

        //     ],
        //     date: '2020.07.01',
        //     orderTotle: 1215,
        //     orderAmount: 31245
        // }


        //vue資料
       
        let store = new Vue({
            el: '#stat',
            data: {
                storeData: JSON.parse('<%- storeData %>'),
                orderSumData: JSON.parse('<%- orderSumData %>'),
                categoryNamegroup:'',
                total:''
            },
            mounted: function () {
                
                this.categoryNamegroup = this.orderSumData.map(function (item) {
                    categoryName = item.categoryName;
                    return categoryName
                })
                this.categoryNamegroup.unshift('全部');

                this.categoryOrdergroup = this.orderSumData.map(function (item) {
                    categoryTotal = item.total;
                    return categoryTotal
                })
                var allTotal=0;

                this.total = this.orderSumData.forEach(function (item) {
                   allTotal += item.total;
                    return allTotal
                })
                console.log(this.total);
                

                
                
            },

            methods: {
                switchbutton(index) {
                    var currenti = index;
                    console.log(currenti);

                }
            }
        })

        $('button').click(function () {
            $('button').removeClass('btnB');
            $(this).addClass('btnB');
        });
    </script>


    <!-- 營運統計 -->
    <script src="/javascript/Chart.min.js"></script>
    <script>
        

        Chart.defaults.global.defaultFontColor = '#373A3C';
        Chart.defaults.global.defaultFontSize = 20;
        Chart.defaults.global.defaultFontFamily = ['Alata',
            'Noto Sans TC'
        ];

        var ctx = document.getElementById('chart').getContext('2d');



        // bar
        var chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: store.categoryNamegroup,
                datasets: [{
                    label: '訂單量',
                    data: store.categoryOrdergroup,
                    backgroundColor: [
                        'rgba(236, 167, 42, 0.8)'

                        // ,'rgba(54, 162, 235, 0.7)',
                        // 'rgba(255, 206, 86, 0.7)',
                        // 'rgba(75, 192, 192, 0.7)',
                        // 'rgba(153, 102, 255, 0.7)',
                        // 'rgba(255, 159, 64, 0.7)'

                    ],
                    borderColor: [
                        'rgba(236, 167, 42,1)'
                        // ,'rgba(54, 162, 235, 1)',
                        // 'rgba(255, 206, 86, 1)',
                        // 'rgba(75, 192, 192, 1)',
                        // 'rgba(153, 102, 255, 1)',
                        // 'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1,
                    maxBarThickness: 2


                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            fontSize: 16,
                            maxTicksLimit: 8,

                        }

                    }],
                    xAxes: [{
                        gridLines: {
                            display: false,
                            color: "black"
                        },

                        maxBarThickness: 80


                    }]
                }
            }



        });
    </script>
</body>

</html>